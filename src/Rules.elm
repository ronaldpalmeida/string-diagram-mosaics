module Rules exposing (..)




-- x y 00 10 11 01
innR : List Int -> List Int
innR ls =
  case ls of
    [5,3,0,3] -> [0,1,3,2]
    [0,1,3,2] -> [5,3,0,3]

    [6,0,6,4] -> [2,6,1,0]
    [2,6,1,0] -> [6,0,6,4]

    [4,6,4,0] -> [1,0,2,4]
    [1,0,2,4] -> [4,6,4,0]

    [0,5,3,5] -> [5,2,0,1]
    [5,2,0,1] -> [0,5,3,5]

    [2,6,3,5] -> [6,0,0,1]
    [6,0,0,1] -> [2,6,3,5]
    
    [4,6,3,2] -> [1,0,0,3]
    [1,0,0,3] -> [4,6,3,2]

    [5,2,6,4] -> [0,5,1,0]
    [0,5,1,0] -> [5,2,6,4]

    [5,3,2,4] -> [0,1,4,0]
    [0,1,4,0] -> [5,3,2,4]

    [4,6,3,5] -> [1,0,0,1]
    [1,0,0,1] -> [4,6,3,5]

    [5,3,6,4] -> [0,1,1,0]
    [0,1,1,0] -> [5,3,6,4]

    [1,0,6,4] -> [4,6,1,0]
    [4,6,1,0] -> [1,0,6,4]

    [0,1,3,5] -> [5,3,0,1]
    [5,3,0,1] -> [0,1,3,5]

    [5,2,0,3] -> [0,5,3,2]
    [0,5,3,2] -> [5,2,0,3]

    [2,6,4,0] -> [6,0,2,4]
    [6,0,2,4] -> [2,6,4,0]

    [6,0,0,3] -> [2,6,3,2]
    [2,6,3,2] -> [6,0,0,3]

    [0,5,4,0] -> [5,2,2,4]
    [5,2,2,4] -> [0,5,4,0]

    _  -> ls


-- x y 00 10
buR : List Int -> List Int
buR ls =
  case ls of
    [1, 0] -> [5, 3]
    [5, 3] -> [1, 0]

    [0, 1] -> [4, 6]
    [4, 6] -> [0, 1]

    [2, 3] -> [3, 0]
    [3, 0] -> [2, 3]

    [4, 2] -> [0, 4]
    [0, 4] -> [4, 2]

    _  -> ls


-- x y 00 10
bdR : List Int -> List Int
bdR ls =
  case ls of
    [1, 0] -> [4, 6]
    [4, 6] -> [1, 0]

    [0, 1] -> [5, 3]
    [5, 3] -> [0, 1]

    [2, 6] -> [6, 0]
    [6, 0] -> [2, 6]

    [5, 2] -> [0, 5]
    [0, 5] -> [5, 2]

    _  -> ls



-- xy 00 10 01 11 02 12
msR : List Int -> List Int
msR ls =
  case ls of
    [1,0,7,8,0,1] -> [4,6,8,7,4,6]
    [4,6,8,7,4,6] -> [1,0,7,8,0,1]

    [0,1,8,7,1,0] -> [5,3,7,8,5,3]
    [5,3,7,8,5,3] -> [0,1,8,7,1,0]

    _ -> ls